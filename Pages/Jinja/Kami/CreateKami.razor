@namespace Wadatsumi.Jinja.Pages.Kami
@page "/Jinja/Kami/New"
@inject Data.JinjaDbContext jinjadb
@inject NavigationManager navigation
@using Radzen.Blazor

<h2>神名追加</h2>
@{
    var i = 1;
    foreach (var shinmei in Kami.ShinmeiList)
    {
    <h3>神名 @i</h3>
    <div class="row d-flex flex-row align-items-center">
        <div class="col-xl-1 col-lg-2 col-3 text-right"><h3>表記</h3></div>
        <div><RadzenTextBox Style="font-size:16px" Value="@shinmei.Name" Change=@(args => shinmei.Name = args.ToString())></RadzenTextBox></div>
    </div>
    <div class="row d-flex flex-row align-items-center">
        <div class="col-xl-1 col-lg-2 col-3 text-right"><h3>読み</h3></div>
        <div><RadzenTextBox Style="font-size:16px" Value="@shinmei.Kana" Change=@(args => shinmei.Kana = args.ToString())></RadzenTextBox></div>
    </div>
    <br />
        i++;
    }
}

<RadzenButton Click="@(args => AddShinmei())">名前を追加する</RadzenButton>
<RadzenButton Click="@(args => Create())">適用</RadzenButton>

@code {
    private Data.Kami Kami { get; set; }
    protected override void OnInitialized()
    {
        Kami = new Data.Kami()
        {
            ShinmeiList = new List<Data.Shinmei>(),
        };
    }

    protected void AddShinmei()
    {
        Kami.ShinmeiList.Add(new Data.Shinmei());
        StateHasChanged();
    }

    protected void Create()
    {
        jinjadb.KamiDbSet.Add(Kami);
        jinjadb.Entry(Kami).State = Microsoft.EntityFrameworkCore.EntityState.Added;
        jinjadb.SaveChanges();

        navigation.NavigateTo(Data.PathDefine.KamiListUrl);
    }
}
