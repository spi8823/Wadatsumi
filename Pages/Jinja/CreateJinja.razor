@page "/Jinja/New"
@using Radzen.Blazor
@using Data.Jinja
@using Microsoft.EntityFrameworkCore
@using System.Text.Json
@inject JinjaDbContext jinjadb
@inject NavigationManager navigation
@inject IJSRuntime jsruntime
@inject HttpClient httpClient

<h1>神社追加</h1>

<div class="col-xl-1 col-lg-2 col-3 text-left"><h2>名称</h2></div>
<div class="row d-flex flex-row align-items-center">
    <div class="col-xl-1 col-lg-2 col-3 text-right"><h3>表記</h3></div>
    <div><RadzenTextBox Style="font-size:16px" Value="@Jinja.Name" Change=@(value => Jinja.Name = value)></RadzenTextBox></div>
</div>
<div class="row d-flex flex-row align-items-center">
    <div class="col-xl-1 col-lg-2 col-3 text-right"><h3>読み</h3></div>
    <div><RadzenTextBox Style="font-size:16px" Value="@Jinja.Kana" Change=@(value => Jinja.Kana = value)></RadzenTextBox></div>
</div>

<hr />


<div class="col-xl-1 col-lg-2 col-3 text-left"><h2>場所</h2></div>
<div class="row d-flex flex-row align-items-center">
    <div class="col-xl-1 col-lg-2 col-3 text-right"><h3>都道府県</h3></div>
    @if (IsAutoLocation)
    {
        <div><h4>@Jinja.Location.Prefecture.Name</h4></div>
    }
    else
    {
        <div>
            <RadzenDropDown TValue="Prefecture"
                            Data="@jinjadb.PrefectureDbSet"
                            Context="prefecture"
                            Change="@(p => Jinja.Location.Prefecture = (Prefecture)p)">
                <Template>
                    @prefecture.Name
                </Template>
            </RadzenDropDown>
        </div>
    }
</div>
<div class="row d-flex flex-row align-items-center">
    <div class="col-xl-1 col-lg-2 col-3 text-right"><h3>市区町村</h3></div>
    @if (IsAutoLocation)
    {
        <div><h4>@Jinja.Location.Municipality.Name</h4></div>
    }
    else
    {
        if (Jinja.Location.Prefecture != null)
        {
            <div>
                <RadzenDropDown TValue="Municipality"
                                Data="@jinjadb.MunicipalityDbSet.Where(m => m.Prefecture.ID == Jinja.Location.Prefecture.ID)"
                                Context="municipality"
                                Change="@(m => Jinja.Location.Municipality = (Municipality)m)">
                    <Template>
                        @municipality.Name
                    </Template>
                </RadzenDropDown>
            </div>
        }
    }
</div>
<div class="row d-flex flex-row align-items-center">
    <div class="col-xl-1 col-lg-2 col-3 text-right"><h3>住所</h3></div>
    <div>
        <RadzenTextBox Value="@Jinja.Location.Address" Change="@(t => Jinja.Location.Address = t)"></RadzenTextBox>
    </div>
</div>
<div class="row d-flex flex-row align-items-center">
    <div class="col-xl-1 col-lg-2 col-3 text-right"><h3></h3></div>
    <div>
        <RadzenButton Click="SwitchAutoLocation">
            @if (IsAutoLocation)
            {
                @:手動入力
            }
            else
            {
                @:自動取得
            }
        </RadzenButton>
    </div>
</div>
<div class="row d-flex flex-row align-items-center">
    <div class="col-xl-1 col-lg-2 col-3 text-right"><h3>令制国</h3></div>
    <div>
        <RadzenDropDown TValue="Ryouseikoku" Data=@jinjadb.RyouseikokuDbSet Context="ryouseikoku" Change="@(r => Jinja.Ryouseikoku = (Ryouseikoku)r)">
            <Template>
                [@ryouseikoku.Region.Name]@ryouseikoku.Name
            </Template>
        </RadzenDropDown>
    </div>
</div>

<hr />

<div class="row d-flex flex-row align-items-center">
    <div class="col-xl-1 col-lg-2 col-3 text-left"><h2>祭神</h2></div>
    <div>
        <RadzenButton Click=AddSaijin>追加</RadzenButton>
        <br />
    </div>
</div>
@for (var i = 0; i < Jinja.SaijinList.Count; i++)
{
    var index = i;
    <div class="row d-flex flex-row align-items-center">
        <div class="col-xl-1 col-lg-2 col-3 text-right"><h3>祭神@(i + 1)</h3></div>
        <div>
            <RadzenDropDownDataGrid TValue="Shinmei" Data=@MainShinmeiList TextProperty="Name"
                                    Change="@(s => Jinja.SaijinList[index].Kami = (s as Shinmei).Kami)">

            </RadzenDropDownDataGrid>
        </div>
    </div>
}


<hr />

<div class="row d-flex flex-row align-items-center">
    <div class="col-xl-1 col-lg-2 col-3 text-right"><h3>御朱印</h3></div>
    <div>
        <RadzenCheckBox TValue="bool" Value=IsGoshuin />
        <br />
    </div>
</div>

<br />

<div class="row d-flex flex-row align-items-center">
    <div class="col-xl-1 col-lg-2 col-3 text-right"></div>
    <div>
        <RadzenButton Click=Create>適用</RadzenButton>
    </div>
</div>

@code{
    private Jinja Jinja { get; set; }
    private IEnumerable<Ryouseikoku> RyouseikokuList { get; set; }
    private IEnumerable<Shinmei> MainShinmeiList { get; set; }
    private bool IsGoshuin { get; set; } = false;
    private bool IsAutoLocation { get; set; } = false;

    //private RadzenDropDownDataGrid<Ryouseikoku> ryouseikokuDropDown;

    protected override void OnInitialized()
    {
        Jinja = new Jinja()
        {
            SaijinList = new List<Saijin>(),
            Location = new Location(),
        };
        RyouseikokuList = jinjadb.RyouseikokuDbSet;
        MainShinmeiList = jinjadb.KamiDbSet.Select(k => k.ShinmeiList.First());
        base.OnInitialized();
    }

    protected void Create()
    {
        Jinja.SaijinList.RemoveAll(s => s == null || s.Kami == null);
        jinjadb.JinjaDbSet.Add(Jinja);
        jinjadb.Entry(Jinja).State = EntityState.Added;

        if (IsGoshuin)
        {
            var goshuin = new Goshuin()
            {
                Jinja = Jinja,
                VisitDate = DateTime.Now,
            };
            jinjadb.GoshuinDbSet.Add(goshuin);
            jinjadb.Entry(goshuin).State = EntityState.Added;
        }

        jinjadb.SaveChanges();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            //ryouseikokuDropDown.Reset();
        }
        base.OnAfterRender(firstRender);
    }

    protected void AddSaijin()
    {
        var saijin = new Saijin()
        {
            Jinja = Jinja,
            Kami = null,
        };
        Jinja.SaijinList.Add(saijin);
        StateHasChanged();
    }

    protected async Task SwitchAutoLocation()
    {
        if (IsAutoLocation)
        {
            Jinja.Location.Prefecture = null;
            Jinja.Location.Municipality = null;
        }
        else
        {
            var geo = await Data.Geolocation.GetAsync(jsruntime, httpClient, jinjadb);
            Jinja.Location = new Location(geo, jinjadb);
        }

        IsAutoLocation = !IsAutoLocation;
        StateHasChanged();
    }
}

@*DropDownDataGrid*@
@code{
    #region
    /*
    <div class="row d-flex flex-row align-items-center">
        <div class="col-xl-1 col-lg-2 col-3 text-right"><h3>令制国</h3></div>
        <div>
            <RadzenDropDownDataGrid @ref="ryouseikokuDropDown" TValue="Ryouseikoku"
                                Data=@RyouseikokuList TextProperty="Name"
                                PageSize="8" Change="@(r => Jinja.Ryouseikoku = (Ryouseikoku)r)">
                <Columns>
                    <RadzenDropDownDataGridColumn Context="ryouseikoku" Title="地方" Width="30px">
                        <Template>@ryouseikoku.Region.Name</Template>
                    </RadzenDropDownDataGridColumn>
                    <RadzenDropDownDataGridColumn Context="ryouseikoku" Title="国名" Width="70px">
                        <Template>@ryouseikoku.Name</Template>
                    </RadzenDropDownDataGridColumn>
                </Columns>
            </RadzenDropDownDataGrid>
        </div>
    </div>
    */
    #endregion
}